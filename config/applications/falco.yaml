apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: falco
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: falco
    repoURL: https://falcosecurity.github.io/charts
    targetRevision: 4.20.0
    helm:
      releaseName: falco
      values: |
        image:
          tag: "master"
          pullPolicy: Always
        tolerations:
          - key: "Availability"
            operator: "Equal"
            value: "SingleAZ"
            effect: "NoSchedule"
          - key: "Archtype"
            operator: "Equal"
            value: "arm"
            effect: "NoSchedule"
        metrics:
          enabled: true
          interval: 10s
          includeEmptyValues: true
        serviceMonitor:
          create: true
          labels:
            release: "kube-prometheus-stack"
        grafana:
          dashboards:
            enabled: true
            configMaps:
              falco:
                folder: "falcosecurity"
        collectors:
          kubernetes:
            enabled: true
            pluginRef: "ghcr.io/falcosecurity/plugins/plugin/k8smeta:main"
        k8s-metacollector:
          serviceMonitor:
            create: true
            labels:
              release: "kube-prometheus-stack"
          grafana:
            dashboards:
              enabled: true
              configMaps:
                collector:
                  folder: "falcosecurity"
        falcoctl:
          artifact:
            install:
              # -- Enable the init container.
              enabled: true
            follow:
              # -- Enable the sidecar container.
              enabled: true
          config:
            artifact:
              install:
                refs: [falco-rules:3, ghcr.io/falcosecurity/plugins/plugin/container:main]
              follow:
                refs: [falco-rules:3]
        services:
          - name: k8saudit-webhook
            type: NodePort
            ports:
              - port: 9765 # See plugin open_params
                nodePort: 30007
                protocol: TCP
        tty: true
        falco:
          libs_logger:
            enabled: true
            severity: info
          rules_files:
            - /etc/falco/falco_rules.yaml
            - /etc/falco/k8s_audit_rules.yaml
            - /etc/falco/rules.d
          plugins:
            - name: k8saudit
              library_path: libk8saudit.so
              init_config:
                ""
                # maxEventBytes: 1048576
                # sslCertificate: /etc/falco/falco.pem
              open_params: "http://:9765/k8s-audit"
            - name: json
              library_path: libjson.so
              init_config: ""
            - name: container
              library_path: libcontainer.so
              init_config:
                label_max_len: 100
                with_size: false
          load_plugins: [container]
          append_output:
            - match:
                source: syscall
              extra_output: >-
                pod-uid=%k8smeta.pod.uid, pod-name=%k8smeta.pod.name,
                namespace-name=%k8smeta.ns.name
  destination:
    server: "https://kubernetes.default.svc"
    namespace: falco
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
